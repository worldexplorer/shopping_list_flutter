// DTO regenerated by https://pub.dev/documentation/json_annotation/latest/json_annotation/JsonSerializable/explicitToJson.html
// $ flutter pub run build_runner build
// $ flutter pub run build_runner watch

import 'package:json_annotation/json_annotation.dart';

import '../outgoing/edit_purchase_dto.dart';

// import 'package:shopping_list_flutter/utils/checked_convert.dart';
// import 'pur_item_dto.dart';

part 'purchase_dto.g.dart';

@JsonSerializable(
    checked: false,
    createFactory: true,
    createToJson: true,
    explicitToJson: true,
    disallowUnrecognizedKeys: false,
    includeIfNull: true)
class PurchaseDto extends EditPurchaseDto {
  DateTime date_created;
  DateTime date_updated;

  int? replyto_id;
  int? copiedfrom_id;

  int person_created;
  String person_created_name;

  bool purchased;
  int? person_purchased;
  String? person_purchased_name;

  double? price_total;
  double? weight_total;

  PurchaseDto({
    required id,
    required this.date_created,
    required this.date_updated,
    required name,
    required room,
    required message,
    required show_pgroup,
    required show_serno,
    required show_qnty,
    required show_price,
    required show_weight,
    required show_state_unknown,
    required show_state_stop,
    required replyto_id,
    required copiedfrom_id,
    required this.person_created,
    required this.person_created_name,
    required persons_can_edit,
    required persons_can_fill,
    required this.purchased,
    this.person_purchased,
    this.person_purchased_name,
    this.price_total,
    this.weight_total,
    required purItems,
  }) : super(
          id: id,
          name: name,
          room: room,
          message: message,
          show_pgroup: show_pgroup,
          show_serno: show_serno,
          show_qnty: show_qnty,
          show_price: show_price,
          show_weight: show_weight,
          show_state_unknown: show_state_unknown,
          show_state_stop: show_state_stop,
          persons_can_edit: persons_can_edit,
          persons_can_fill: persons_can_fill,
          purItems: purItems,
        );

  PurchaseDto clone() {
    return PurchaseDto.fromJson(toJson());
  }

  factory PurchaseDto.fromJson(Map<String, dynamic> json) {
    // return _$PurchaseDtoFromJson(BasePurchaseDto.fromJson(json).toJson());
    try {
      // final purItemsJson = json['purItems'];
      //   if (purItemsJson != null) {
      //     // otherwise [type 'List<dynamic>' is not a subtype of type 'List<int>'] in runtime
      //     List<PurItemDto> purItems = (purItemsJson as List<dynamic>).map((e) {
      //       try {
      //         //copypaste from Base
      //         PurItemDto purItem = PurItemDto.fromJson(e as Map<String, dynamic>);
      //         return purItem;
      //       } on CheckedFromJsonException {
      //         rethrow;
      //       } catch (e) {
      //         rethrow;
      //       }
      //     }).toList();

      final base = EditPurchaseDto.fromJson(json);
      // final baseJson = base.toJson();
      // baseJson.forEach((key, value) {
      //   json.update(key, (_) => value, ifAbsent: () => value);
      // });

      // conversion generated for base class EditPurchaseDto should be exactly same in subclass PurchaseDto
      // fillConverted(
      //     json,
      //     'purItems',
      //     (v) => (v as List<dynamic>)
      //         .map((e) => PurItemDto.fromJson(e as Map<String, dynamic>))
      //         .toList());

      json['purItems'] = base.purItems;
      return _$PurchaseDtoFromJson(json);
      // } on CheckedFromJsonException {
      //   rethrow;
    } catch (e) {
      rethrow;
    }
  }
  Map<String, dynamic> toJson() => _$PurchaseDtoToJson(this);
}
